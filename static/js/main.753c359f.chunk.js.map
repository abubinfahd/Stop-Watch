{"version":3,"sources":["components/CountDown/Digit/Digit.js","components/CountDown/CountDown.js","components/Title/Title.js","components/Controller/Controller.js","components/Laps/Laps.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Digit","props","className","style","borderColor","color","value","CountDown","time","min","sec","mili","Title","editHandler","setState","state","isInput","inputChange","event","title","target","keyPressHandler","key","blurHandler","output","this","onChange","onKeyPress","onBlur","type","onClick","Component","Controller","startHandler","start","pause","lap","pauseHandler","reset","lapHandler","resetHandler","getController","Laps","laps","map","index","MainComponent","getStart","intervalID","setInterval","getPause","clearInterval","getLap","getReset","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.753c359f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Digit.css';\r\n\r\nconst Digit = (props) => {\r\n    return (\r\n        <div className='digit mx-3 text-center' style={{ borderColor: props.color }}>\r\n            <h1 className='display-2 py-3' style={{ color: props.color }}>\r\n                {props.value < 10 ? `0${props.value}` : props.value}\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Digit;","import React from 'react';\r\nimport Digit from './Digit/Digit';\r\n\r\nconst CountDown = (props) => {\r\n    return( \r\n        <div className='d-flex'>\r\n            <Digit color=\"palegreen\" value={props.time.min}/>\r\n            <Digit color=\"skyblue\" value={props.time.sec}/>\r\n            <Digit color=\"salmon\" value={props.time.mili}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountDown;","import React, { Component } from 'react';\r\nimport './Title.css';\r\n\r\nclass Title extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: 'This is a dummy title',\r\n            isInput: false,\r\n        }\r\n    }\r\n\r\n    editHandler = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            isInput: true,\r\n        })\r\n    }\r\n\r\n    inputChange = (event) => {\r\n        //console.log(event.target.value);\r\n        this.setState({\r\n            ...this.state,\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    keyPressHandler = (event) => {\r\n        //console.log(event.key);\r\n        if(event.key === 'Enter') {\r\n            this.setState({\r\n                ...this.state,\r\n                isInput: false\r\n            })\r\n        }\r\n    }\r\n\r\n    blurHandler = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            isInput: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let output = null;\r\n        if (this.state.isInput) {\r\n            output = (\r\n                <div className='title'>\r\n                    <input\r\n                        className='form-control'\r\n                        onChange={event => this.inputChange(event)}\r\n                        onKeyPress={event => this.keyPressHandler(event)}\r\n                        onBlur = {event => this.blurHandler(event)}\r\n                        type='text'\r\n                        value={this.state.title}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            output = (\r\n                <div className='d-flex title'>\r\n                    <h1 className='display-4'>{this.state.title}</h1>\r\n                    <span onClick={this.editHandler} className='ml-auto edit-icon'>\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\n\r\n\r\nclass Controller extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            start: true,\r\n            pause: false,\r\n            lap: false,\r\n            reset: false,\r\n        }\r\n    }\r\n\r\n\r\n    startHandler = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            start: false,\r\n            pause: true,\r\n            lap: true\r\n        })\r\n        this.props.start()\r\n    }\r\n\r\n    pauseHandler = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            start: true,\r\n            pause: false,\r\n            lap: false,\r\n            reset: true\r\n        })\r\n        this.props.pause()\r\n    }\r\n\r\n    lapHandler = () => {\r\n        this.props.lap()\r\n    }\r\n\r\n    resetHandler = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            start: true,\r\n            pause: false,\r\n            lap: false,\r\n            reset: false,\r\n        })\r\n        this.props.reset()\r\n    }\r\n\r\n    getController = () => {\r\n        let output = null;\r\n\r\n        if (this.state.start && !this.state.reset) {\r\n            output = (\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-success btn-lg px-5 m-4\"\r\n                        onClick={event => this.startHandler(event)}\r\n                    >\r\n                        Start\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.pause && this.state.lap) {\r\n            output = (\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-primary btn-lg px-5 m-4\"\r\n                        onClick={event => this.pauseHandler(event)}\r\n                    >\r\n                        Pause\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-warning btn-lg px-5 m-4\"\r\n                        onClick={event => this.lapHandler(event)}\r\n                    >\r\n                        Lap\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.start && this.state.reset) {\r\n            output = (\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-success btn-lg px-5 m-4\"\r\n                        onClick={event => this.startHandler(event)}\r\n                    >\r\n                        Start\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-danger btn-lg px-5 m-4\"\r\n                        onClick={event => this.resetHandler(event)}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        return output\r\n    }\r\n\r\n    render() {\r\n        return this.getController()\r\n    }\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\n\r\nconst Laps = (props) => {\r\n    return (\r\n\r\n        <ul className=\"list-group list-group-flush\">\r\n            {props.laps.map((lap, index) => {\r\n                return (\r\n                    <li key={index} className='list-group-item'>\r\n                        <h4>\r\n                            <span className='text-dark'>Minute: </span>\r\n                            <span className='text-danger'>{lap.min}</span>\r\n                            <span className='text-dark'>Second: </span>\r\n                            <span className='text-danger'>{lap.sec}</span>\r\n                            <span className='text-dark'>Mili Second: </span>\r\n                            <span className='text-danger'>{lap.mili}</span>\r\n                        </h4>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default Laps;","import React,{Component} from 'react';\r\nimport CountDown from './CountDown/CountDown';\r\nimport Title from './Title/Title';\r\nimport Controller from './Controller/Controller';\r\nimport Laps from './Laps/Laps';\r\n\r\nclass MainComponent extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            time: {\r\n                min: 0,\r\n                sec: 0,\r\n                mili: 0\r\n            },\r\n            laps : []\r\n        }\r\n    }\r\n\r\n\r\n    getStart = () => {\r\n        this.intervalID = setInterval(() => {\r\n            let min = this.state.time.min\r\n            let sec = this.state.time.sec\r\n            let mili = this.state.time.mili\r\n\r\n            if( mili >= 10) {\r\n                sec = sec + 1\r\n                mili = 0\r\n            }\r\n\r\n            if(sec >= 60 ) {\r\n                min = min + 1\r\n                sec = 0\r\n            }\r\n\r\n            this.setState({\r\n                ...this.state,\r\n               time:{\r\n                min,\r\n                sec,\r\n                mili: mili + 1\r\n               }\r\n            })\r\n\r\n\r\n        }, 100)\r\n    }\r\n\r\n    getPause = () => {\r\n        clearInterval(this.intervalID)\r\n    }\r\n\r\n    getLap = () => {\r\n        let time = {\r\n            ...this.state.time\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            laps: [time, ...this.state.laps]\r\n        })\r\n        //console.log(this.state.laps);\r\n    }\r\n\r\n    getReset = () => {\r\n        this.setState({\r\n            time: {\r\n                min: 0,\r\n                sec: 0,\r\n                mili: 0\r\n            },\r\n            laps: []\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className='container py-5'>\r\n                    <div className='row'>\r\n                        <div className='col-sm-8 offset-sm-2'>\r\n                            <Title />\r\n                            <br />\r\n                            <CountDown time={this.state.time}/>\r\n                            <Controller \r\n                                start = { this.getStart.bind(this)}\r\n                                pause = {() => this.getPause()}\r\n                                reset = {() => this.getReset()}\r\n                                lap = {() => this.getLap()}\r\n                            />\r\n                            <Laps className='my-4' laps={this.state.laps}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React from 'react';\nimport './App.css';\n\nimport MainComponent from './components/MainComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}